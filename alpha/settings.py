"""
Django settings for alpha project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from django.contrib import messages
from django.utils.translation import ugettext_lazy as _
# Celery settings
import djcelery
djcelery.setup_loader()

BROKER_URL = 'localhost'
BROKER_BACKEND = 'redis'
BROKER_USER = ''
BROKER_PASSWORD = ''

REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
REDIS_CONNECT_RETRY = True

# CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']
# CELERY_TASK_SERIALIZER = 'pickle'
# CELERY_RESULT_SERIALIZER = 'pickle'

CELERY_RESULT_BACKEND = 'djcelery.backends.database:DatabaseBackend'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8wdtdii#cerl83elbnjl-d@xz6-l3r)2t-1l!)%6038cr8(fnt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sites',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'crispy_forms',
    'accounts',
    'inventory',
    'tasks',

    'djcelery',
    'kombu.transport.django',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alpha.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alpha.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'alpha',
        'USER': 'alpha',
        'PASSWORD': 'alpha',
        'HOST': 'localhost',
        'PORT': '',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'zh-cn'
# LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

SITE_ID = 1
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AUTH_USER_MODEL = 'accounts.User'
ACCOUNT_ACTIVATION_REQUIRED = True
ACCOUNT_MUGSHOT_PATH = 'mugshots/%(id)s/%(date_now)s/'
ACCOUNT_REMEMBER_ME_DAYS = 30
ACCOUNT_SIGNUP_DISABLED = False
ACCOUNT_SIGNUP_REDIRECT_URL = 'account_login'
ACCOUNT_SUFFIX_DISABLED = []
ACCOUNT_SUFFIX_ENABLED = []
ACCOUNT_TOKEN_EXPIRED_DAYS = 3
ACCOUNT_UNIQUE_EMAIL = False
ACCOUNT_CHANGE_USERNAME_DISABLED = False
ACCOUNT_FORBIDDEN_USERNAMES = ['root', 'admin', 'login', 'logout', 'password']
ACCOUNT_NOTIFY_ON_PASSWORD_CHANGE = True
ACCOUNT_DELETION_EXPUNGE_HOURS = 72

LOGOUT_REDIRECT_URL = '/'

MSGS = {
    'email_confirmation_sent': {
        'level': messages.INFO,
        'text': _('Confirmation email sent to {email}.')
    },
    'already_login': {
        'level': messages.WARNING,
        'text': _('You are currently logged in as {username}, if you need to switch to another account, please logout first.')
    },
    'profile_updated': {
        'level': messages.SUCCESS,
        'text': _('Profile successfully updated.')
    },
    'logout': {
        'level': messages.SUCCESS,
        'text': _('You have been logout.')
    },
    'password_changed': {
        'level': messages.SUCCESS,
        'text': _('Password successfully changed.')
    },
    'account_delete': {
        'level': messages.SUCCESS,
        'text': _('Your account is now inactive and your data will be expunged in the next {expunge_hours} hours.')
    },
    'email_reset_sent': {
        'level': messages.INFO,
        'text': _('Password reset email sent to {email}.')
    },
    'task_sent': {
        'level': messages.INFO,
        'text': _('Task has been running in quene, please wait for a moment and refresh.'),
    },
}

EMAIL_USE_TLS = False
EMAIL_HOST = 'smtp.qiye.163.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = DEFAULT_FROM_EMAIL = 'somebody@example.com'
EMAIL_HOST_PASSWORD = 's3cret@pass'

CRISPY_TEMPLATE_PACK = 'bootstrap3'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
    }
}
